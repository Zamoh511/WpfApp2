//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace WpfApp2.RapidCM_PGS_Dev
{

    public partial class Container_EmptyIn : XPLiteObject
    {
        int fID;
        [Key(true)]
        public int ID
        {
            get { return fID; }
            set { SetPropertyValue<int>(nameof(ID), ref fID, value); }
        }
        Container fContainerID;
        [Association(@"Container_EmptyInReferencesContainer")]
        public Container ContainerID
        {
            get { return fContainerID; }
            set { SetPropertyValue<Container>(nameof(ContainerID), ref fContainerID, value); }
        }
        Order_BookingReference fBookingReferenceID;
        [Association(@"Container_EmptyInReferencesOrder_BookingReference")]
        public Order_BookingReference BookingReferenceID
        {
            get { return fBookingReferenceID; }
            set { SetPropertyValue<Order_BookingReference>(nameof(BookingReferenceID), ref fBookingReferenceID, value); }
        }
        DateTime fDateIn;
        public DateTime DateIn
        {
            get { return fDateIn; }
            set { SetPropertyValue<DateTime>(nameof(DateIn), ref fDateIn, value); }
        }
        string fEmptyDepot;
        [Size(50)]
        public string EmptyDepot
        {
            get { return fEmptyDepot; }
            set { SetPropertyValue<string>(nameof(EmptyDepot), ref fEmptyDepot, value); }
        }
        Library_Transporter fTransporterID;
        [Association(@"Container_EmptyInReferencesLibrary_Transporter")]
        public Library_Transporter TransporterID
        {
            get { return fTransporterID; }
            set { SetPropertyValue<Library_Transporter>(nameof(TransporterID), ref fTransporterID, value); }
        }
        double fContainerScaleTar;
        public double ContainerScaleTar
        {
            get { return fContainerScaleTar; }
            set { SetPropertyValue<double>(nameof(ContainerScaleTar), ref fContainerScaleTar, value); }
        }
        string fTransporterDel;
        [Size(50)]
        public string TransporterDel
        {
            get { return fTransporterDel; }
            set { SetPropertyValue<string>(nameof(TransporterDel), ref fTransporterDel, value); }
        }
        string fTruckRegistration;
        [Size(50)]
        public string TruckRegistration
        {
            get { return fTruckRegistration; }
            set { SetPropertyValue<string>(nameof(TruckRegistration), ref fTruckRegistration, value); }
        }
        string fSealsReceived;
        [Size(50)]
        public string SealsReceived
        {
            get { return fSealsReceived; }
            set { SetPropertyValue<string>(nameof(SealsReceived), ref fSealsReceived, value); }
        }
        Library_Site fSiteID;
        [Association(@"Container_EmptyInReferencesLibrary_Site")]
        public Library_Site SiteID
        {
            get { return fSiteID; }
            set { SetPropertyValue<Library_Site>(nameof(SiteID), ref fSiteID, value); }
        }
        Library_Weighbridge fWeighbridgeID;
        [Association(@"Container_EmptyInReferencesLibrary_Weighbridge")]
        public Library_Weighbridge WeighbridgeID
        {
            get { return fWeighbridgeID; }
            set { SetPropertyValue<Library_Weighbridge>(nameof(WeighbridgeID), ref fWeighbridgeID, value); }
        }
        string fComments;
        public string Comments
        {
            get { return fComments; }
            set { SetPropertyValue<string>(nameof(Comments), ref fComments, value); }
        }
        int feFlag;
        public int eFlag
        {
            get { return feFlag; }
            set { SetPropertyValue<int>(nameof(eFlag), ref feFlag, value); }
        }
        string fLastUser;
        [Size(50)]
        public string LastUser
        {
            get { return fLastUser; }
            set { SetPropertyValue<string>(nameof(LastUser), ref fLastUser, value); }
        }
        double fTareWeight;
        public double TareWeight
        {
            get { return fTareWeight; }
            set { SetPropertyValue<double>(nameof(TareWeight), ref fTareWeight, value); }
        }
        double fGrossWeight;
        public double GrossWeight
        {
            get { return fGrossWeight; }
            set { SetPropertyValue<double>(nameof(GrossWeight), ref fGrossWeight, value); }
        }
        DateTime fTareWeightDate;
        public DateTime TareWeightDate
        {
            get { return fTareWeightDate; }
            set { SetPropertyValue<DateTime>(nameof(TareWeightDate), ref fTareWeightDate, value); }
        }
        DateTime fGrossWeightDate;
        public DateTime GrossWeightDate
        {
            get { return fGrossWeightDate; }
            set { SetPropertyValue<DateTime>(nameof(GrossWeightDate), ref fGrossWeightDate, value); }
        }
        AccessControl fAccessControlID;
        [Association(@"Container_EmptyInReferencesAccessControl")]
        public AccessControl AccessControlID
        {
            get { return fAccessControlID; }
            set { SetPropertyValue<AccessControl>(nameof(AccessControlID), ref fAccessControlID, value); }
        }
        double fContainerTarWeight;
        public double ContainerTarWeight
        {
            get { return fContainerTarWeight; }
            set { SetPropertyValue<double>(nameof(ContainerTarWeight), ref fContainerTarWeight, value); }
        }
        DateTime fContainerTarWeightDate;
        public DateTime ContainerTarWeightDate
        {
            get { return fContainerTarWeightDate; }
            set { SetPropertyValue<DateTime>(nameof(ContainerTarWeightDate), ref fContainerTarWeightDate, value); }
        }
        DateTime fDateModified;
        public DateTime DateModified
        {
            get { return fDateModified; }
            set { SetPropertyValue<DateTime>(nameof(DateModified), ref fDateModified, value); }
        }
        [Association(@"Container_EmptyOutReferencesContainer_EmptyIn")]
        public XPCollection<Container_EmptyOut> Container_EmptyOuts { get { return GetCollection<Container_EmptyOut>(nameof(Container_EmptyOuts)); } }
    }

}
