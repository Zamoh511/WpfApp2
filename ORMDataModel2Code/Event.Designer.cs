//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace WpfApp2.RapidCM_PGS_Dev
{

    public partial class Event : XPCustomObject
    {
        Guid fOid;
        [Key(true)]
        public Guid Oid
        {
            get { return fOid; }
            set { SetPropertyValue<Guid>(nameof(Oid), ref fOid, value); }
        }
        string fResourceIds;
        [Size(SizeAttribute.Unlimited)]
        public string ResourceIds
        {
            get { return fResourceIds; }
            set { SetPropertyValue<string>(nameof(ResourceIds), ref fResourceIds, value); }
        }
        Event fRecurrencePattern;
        [Association(@"EventReferencesEvent")]
        public Event RecurrencePattern
        {
            get { return fRecurrencePattern; }
            set { SetPropertyValue<Event>(nameof(RecurrencePattern), ref fRecurrencePattern, value); }
        }
        string fSubject;
        [Size(250)]
        public string Subject
        {
            get { return fSubject; }
            set { SetPropertyValue<string>(nameof(Subject), ref fSubject, value); }
        }
        string fDescription;
        [Size(SizeAttribute.Unlimited)]
        public string Description
        {
            get { return fDescription; }
            set { SetPropertyValue<string>(nameof(Description), ref fDescription, value); }
        }
        DateTime fStartOn;
        [Indexed(Name = @"iStartOn_Event")]
        public DateTime StartOn
        {
            get { return fStartOn; }
            set { SetPropertyValue<DateTime>(nameof(StartOn), ref fStartOn, value); }
        }
        DateTime fEndOn;
        [Indexed(Name = @"iEndOn_Event")]
        public DateTime EndOn
        {
            get { return fEndOn; }
            set { SetPropertyValue<DateTime>(nameof(EndOn), ref fEndOn, value); }
        }
        bool fAllDay;
        public bool AllDay
        {
            get { return fAllDay; }
            set { SetPropertyValue<bool>(nameof(AllDay), ref fAllDay, value); }
        }
        string fLocation;
        public string Location
        {
            get { return fLocation; }
            set { SetPropertyValue<string>(nameof(Location), ref fLocation, value); }
        }
        int fLabel;
        public int Label
        {
            get { return fLabel; }
            set { SetPropertyValue<int>(nameof(Label), ref fLabel, value); }
        }
        int fStatus;
        public int Status
        {
            get { return fStatus; }
            set { SetPropertyValue<int>(nameof(Status), ref fStatus, value); }
        }
        int fType;
        public int Type
        {
            get { return fType; }
            set { SetPropertyValue<int>(nameof(Type), ref fType, value); }
        }
        double fRemindIn;
        public double RemindIn
        {
            get { return fRemindIn; }
            set { SetPropertyValue<double>(nameof(RemindIn), ref fRemindIn, value); }
        }
        string fReminderInfoXml;
        [Size(200)]
        public string ReminderInfoXml
        {
            get { return fReminderInfoXml; }
            set { SetPropertyValue<string>(nameof(ReminderInfoXml), ref fReminderInfoXml, value); }
        }
        DateTime fAlarmTime;
        public DateTime AlarmTime
        {
            get { return fAlarmTime; }
            set { SetPropertyValue<DateTime>(nameof(AlarmTime), ref fAlarmTime, value); }
        }
        bool fIsPostponed;
        public bool IsPostponed
        {
            get { return fIsPostponed; }
            set { SetPropertyValue<bool>(nameof(IsPostponed), ref fIsPostponed, value); }
        }
        string fRecurrenceInfoXml;
        [Size(SizeAttribute.Unlimited)]
        public string RecurrenceInfoXml
        {
            get { return fRecurrenceInfoXml; }
            set { SetPropertyValue<string>(nameof(RecurrenceInfoXml), ref fRecurrenceInfoXml, value); }
        }
        [Association(@"EventReferencesEvent")]
        public XPCollection<Event> EventCollection { get { return GetCollection<Event>(nameof(EventCollection)); } }
        [Association(@"ResourceResources_EventEventsReferencesEvent")]
        public XPCollection<ResourceResources_EventEvents> ResourceResources_EventEventss { get { return GetCollection<ResourceResources_EventEvents>(nameof(ResourceResources_EventEventss)); } }
    }

}
